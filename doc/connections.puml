@startuml

class Field {
    -index: int
    -isFilled: boolean
    -belongsTo: Player

    +setFilled(filled: boolean): void
    +setBelongsTo(belongsTo: Player): void
    +isFilled(): boolean
    +getIndex(): int
    +belongsTo: Player
}

class Game {
    -[static] HIGHEST_INDEX: int
    -[static] LINE_SIZE: int

    -fields: List<Field>
    -player: List<Player>
    -results: List<List<Integer>>

    -turnCounter: int
    -winner: Player

    +conquer(): boolean
    +nextTurn(): void
    +finished(): boolean
    +getTurnCounter(): int
    +getWinner(): Player
    +toString(): String
}

interface IGame {
    +conquer(): void
}

class Player {
    -id: int

    +getId(): int
}

Game .up.> IGame

Game ..> Field : <<uses>>
Game ..> Player : <<uses>>

@enduml